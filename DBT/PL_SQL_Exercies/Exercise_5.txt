1. Write a stored function to take three parameters, the sides of a triangle. The sides of the triangle should be accepted from the user. The function should return a Boolean value:- true if the triangle is valid, false otherwise. A triangle is valid if the length of each side is less than the sum of the lengths of the other two sides. Check if the dimensions entered can form a valid triangle.
---> CREATE OR REPLACE FUNCTION is_valid_triangle(a IN NUMBER, b IN NUMBER, c IN NUMBER)
RETURN BOOLEAN
IS
BEGIN
  IF (a + b > c) AND (a + c > b) AND (b + c > a) THEN
    RETURN TRUE;
  ELSE
    RETURN FALSE;
  END IF;
END;

2. Write a function that generates a random number between 1 and 10. Use any logic of your choice to achieve this.
--->CREATE OR REPLACE FUNCTION generate_random_1_to_10
RETURN NUMBER
IS
  rand_num NUMBER;
BEGIN
  rand_num := TRUNC(DBMS_RANDOM.VALUE(1, 11));
  RETURN rand_num;
END;

3. Create a function that accepts a string of n characters and exchanges the first character with the last, the second with the next – to – last, and so forth until n exchanges have been made. What will the final string look like? Write the function to verify your conclusion.
---> CREATE OR REPLACE FUNCTION reverse_pairs(p_str IN VARCHAR2)
RETURN VARCHAR2
IS
  v_result VARCHAR2(4000) := '';
  len INTEGER := LENGTH(p_str);
BEGIN
  FOR i IN 1..len LOOP
    v_result := v_result || SUBSTR(p_str, len - i + 1, 1);
  END LOOP;
  RETURN v_result;
END;