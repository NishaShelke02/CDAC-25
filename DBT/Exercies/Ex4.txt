1. Display the minimum Status in the Supplier table.
--->  SELECT MIN(Status) FROM S;
+-------------+
| MIN(Status) |
+-------------+
|          10 |
+-------------+
1 row in set (0.02 sec)

2. Display the maximum Weight in the Parts table.
--->  SELECT MAX(Weight) FROM P;
+-------------+
| MAX(Weight) |
+-------------+
|       12.50 |
+-------------+
1 row in set (0.01 sec)

3. Display the average Weight of the Parts.
----> SELECT AVG(Weight) FROM P;
+-------------+
| AVG(Weight) |
+-------------+
|    8.833333 |
+-------------+
1 row in set (0.01 sec)

4. Display the total Quantity sold for part ‘P1’.
---> SELECT COUNT(Qty) FROM SPJ;
+------------+
| COUNT(Qty) |
+------------+
|          5 |
+------------+
1 row in set (0.01 sec)

5. Display the total Quantity sold for each part.
--->  SELECT `P#`, SUM(Qty) FROM SPJ GROUP BY `P#`;
+----+----------+
| P# | SUM(Qty) |
+----+----------+
| P1 |      700 |
| P2 |      450 |
| P3 |      150 |
+----+----------+
3 rows in set (0.01 sec)

6. Display the average Quantity sold for each part.
---> SELECT `P#`, AVG(Qty) FROM SPJ GROUP BY `P#`;
+----+----------+
| P# | AVG(Qty) |
+----+----------+
| P1 | 350.0000 |
| P2 | 225.0000 |
| P3 | 150.0000 |
+----+----------+
3 rows in set (0.00 sec)

7. Display the maximum Quantity sold for each part, provided the maximum Quantity is greater than 800.
---> SELECT `P#`, MAX(Qty) FROM SPJ GROUP BY `P#` HAVING MAX(Qty) > 800;
Empty set (0.01 sec)

8. Display the Status and the count of Suppliers with that Status.
----> SELECT Status, COUNT(`S#`) FROM S GROUP BY Status;
+--------+-------------+
| Status | COUNT(`S#`) |
+--------+-------------+
|     10 |           1 |
|     20 |           1 |
|     30 |           1 |
+--------+-------------+
3 rows in set (0.01 sec)

10. What is the difference between COUNT(Status) and COUNT(*) ?
---> COUNT(Status) --> It does not count rows where the Status column is NULL.
SELECT COUNT(Status) FROM S;
+---------------+
| COUNT(Status) |
+---------------+
|             3 |
+---------------+
1 row in set (0.01 sec)
     
COUNT(*) --> It counts all rows, including those with NULL values in any column.
SELECT COUNT(*) FROM S;
+----------+
| COUNT(*) |
+----------+
|        3 |
+----------+
1 row in set (0.03 sec)

 SELECT CASE WHEN Status = 10 THEN 'Ten'
    -> WHEN Status = 20 THEN 'Twenty'
    -> WHEN Status = 30 THEN 'Thirty'
    -> ELSE 'Unkown'
    -> END AS Status,
    -> COUNT(*) FROM S GROUP BY Status;
+--------+----------+
| Status | COUNT(*) |
+--------+----------+
| Ten    |        1 |
| Twenty |        1 |
| Thirty |        1 |
+--------+----------+
3 rows in set, 1 warning (0.00 sec)